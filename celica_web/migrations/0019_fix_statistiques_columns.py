# Generated by Django 5.2.1 on 2025-07-01 12:24

from django.db import migrations


def fix_statistiques_table_structure(apps, schema_editor):
    """
    Corrige la structure de la table celica_web_statistiques pour la faire correspondre au mod√®le
    """
    with schema_editor.connection.cursor() as cursor:
        print("üîß Correction de la structure de la table celica_web_statistiques...")
        
        # 1. Renommer 'moyenne' en 'score_moyen'
        cursor.execute("""
            SELECT COUNT(*)
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE()
            AND TABLE_NAME = 'celica_web_statistiques'
            AND COLUMN_NAME = 'moyenne'
        """)
        
        has_moyenne = cursor.fetchone()[0] > 0
        
        cursor.execute("""
            SELECT COUNT(*)
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE()
            AND TABLE_NAME = 'celica_web_statistiques'
            AND COLUMN_NAME = 'score_moyen'
        """)
        
        has_score_moyen = cursor.fetchone()[0] > 0
        
        if has_moyenne and not has_score_moyen:
            cursor.execute("""
                ALTER TABLE celica_web_statistiques 
                CHANGE COLUMN moyenne score_moyen DOUBLE NULL
            """)
            print("‚úÖ Colonne 'moyenne' renomm√©e en 'score_moyen'")
        elif not has_score_moyen:
            cursor.execute("""
                ALTER TABLE celica_web_statistiques 
                ADD COLUMN score_moyen DOUBLE NULL
            """)
            print("‚úÖ Colonne 'score_moyen' ajout√©e")
        
        # 2. Renommer 'mediane' en 'score_median'
        cursor.execute("""
            SELECT COUNT(*)
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE()
            AND TABLE_NAME = 'celica_web_statistiques'
            AND COLUMN_NAME = 'mediane'
        """)
        
        has_mediane = cursor.fetchone()[0] > 0
        
        cursor.execute("""
            SELECT COUNT(*)
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE()
            AND TABLE_NAME = 'celica_web_statistiques'
            AND COLUMN_NAME = 'score_median'
        """)
        
        has_score_median = cursor.fetchone()[0] > 0
        
        if has_mediane and not has_score_median:
            cursor.execute("""
                ALTER TABLE celica_web_statistiques 
                CHANGE COLUMN mediane score_median DOUBLE NULL
            """)
            print("‚úÖ Colonne 'mediane' renomm√©e en 'score_median'")
        elif not has_score_median:
            cursor.execute("""
                ALTER TABLE celica_web_statistiques 
                ADD COLUMN score_median DOUBLE NULL
            """)
            print("‚úÖ Colonne 'score_median' ajout√©e")
        
        # 3. Supprimer les colonnes obsol√®tes
        obsolete_columns = ['ecart_type', 'groupe_id', 'module_id']
        
        for col in obsolete_columns:
            cursor.execute("""
                SELECT COUNT(*)
                FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_SCHEMA = DATABASE()
                AND TABLE_NAME = 'celica_web_statistiques'
                AND COLUMN_NAME = '{}'
            """.format(col))
            
            if cursor.fetchone()[0] > 0:
                cursor.execute("""
                    ALTER TABLE celica_web_statistiques 
                    DROP COLUMN {}
                """.format(col))
                print(f"‚úÖ Colonne obsol√®te '{col}' supprim√©e")
        
        # 4. Convertir periode_debut et periode_fin en DATETIME(6) si n√©cessaire
        cursor.execute("""
            SELECT DATA_TYPE 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE()
            AND TABLE_NAME = 'celica_web_statistiques'
            AND COLUMN_NAME = 'periode_debut'
        """)
        
        periode_debut_type = cursor.fetchone()
        if periode_debut_type and periode_debut_type[0] == 'date':
            cursor.execute("""
                ALTER TABLE celica_web_statistiques 
                MODIFY COLUMN periode_debut DATETIME(6) NOT NULL
            """)
            print("‚úÖ Colonne 'periode_debut' convertie en DATETIME(6)")
        
        cursor.execute("""
            SELECT DATA_TYPE 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE()
            AND TABLE_NAME = 'celica_web_statistiques'
            AND COLUMN_NAME = 'periode_fin'
        """)
        
        periode_fin_type = cursor.fetchone()
        if periode_fin_type and periode_fin_type[0] == 'date':
            cursor.execute("""
                ALTER TABLE celica_web_statistiques 
                MODIFY COLUMN periode_fin DATETIME(6) NOT NULL
            """)
            print("‚úÖ Colonne 'periode_fin' convertie en DATETIME(6)")
        
        # 5. S'assurer que taux_reussite et nombre_participants ont les bons types
        cursor.execute("""
            ALTER TABLE celica_web_statistiques 
            MODIFY COLUMN taux_reussite DOUBLE NOT NULL
        """)
        
        cursor.execute("""
            ALTER TABLE celica_web_statistiques 
            MODIFY COLUMN nombre_participants INT UNSIGNED NOT NULL DEFAULT 0
        """)
        
        print("üéØ Structure de la table celica_web_statistiques corrig√©e avec succ√®s!")


def reverse_fix_statistiques_table_structure(apps, schema_editor):
    """
    Fonction de rollback (optionnelle)
    """
    print("‚ö†Ô∏è  Rollback de la correction de structure Statistiques non impl√©ment√©")


class Migration(migrations.Migration):

    dependencies = [
        ('celica_web', '0018_fix_aide_columns'),
    ]

    operations = [
        migrations.RunPython(
            fix_statistiques_table_structure,
            reverse_fix_statistiques_table_structure,
        ),
    ]
