# Generated by Django 5.2.1 on 2025-06-30 13:05

from django.db import migrations


def fix_created_at_defaults(apps, schema_editor):
    """Ajoute des valeurs par d√©faut aux colonnes created_at/updated_at"""
    
    with schema_editor.connection.cursor() as cursor:
        # Tables √† corriger avec leurs colonnes created_at/updated_at
        tables_to_fix = [
            'celica_web_question',
            'celica_web_reponse'
        ]
        
        for table in tables_to_fix:
            print(f"üîß Correction des colonnes pour {table}...")
            
            # Modifier la colonne created_at pour ajouter une valeur par d√©faut
            try:
                cursor.execute(f"""
                    ALTER TABLE {table} 
                    MODIFY COLUMN created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6)
                """)
                print(f"‚úÖ {table}.created_at: valeur par d√©faut ajout√©e")
            except Exception as e:
                print(f"‚ö†Ô∏è {table}.created_at: {e}")
            
            # Modifier la colonne updated_at pour ajouter une valeur par d√©faut
            try:
                cursor.execute(f"""
                    ALTER TABLE {table} 
                    MODIFY COLUMN updated_at DATETIME(6) 
                    DEFAULT CURRENT_TIMESTAMP(6) 
                    ON UPDATE CURRENT_TIMESTAMP(6)
                """)
                print(f"‚úÖ {table}.updated_at: valeur par d√©faut ajout√©e")
            except Exception as e:
                print(f"‚ö†Ô∏è {table}.updated_at: {e}")
        
        print("üéØ Correction des valeurs par d√©faut termin√©e")


def reverse_created_at_defaults(apps, schema_editor):
    """Inverse les modifications (pour le rollback)"""
    
    with schema_editor.connection.cursor() as cursor:
        tables_to_revert = [
            'celica_web_question',
            'celica_web_reponse'
        ]
        
        for table in tables_to_revert:
            try:
                cursor.execute(f"""
                    ALTER TABLE {table} 
                    MODIFY COLUMN created_at DATETIME(6)
                """)
                cursor.execute(f"""
                    ALTER TABLE {table} 
                    MODIFY COLUMN updated_at DATETIME(6)
                """)
            except Exception:
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('celica_web', '0007_fix_reponse_date_creation_field'),
    ]

    operations = [
        migrations.RunPython(
            fix_created_at_defaults,
            reverse_created_at_defaults
        ),
    ]
